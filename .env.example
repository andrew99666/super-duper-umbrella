# Copy this file to .env and fill in the required secrets.
APP_SECRET_KEY=change-me
BASE_URL=http://localhost:8000
DATABASE_URL=sqlite:///./data/app.db

# Google Ads API credentials
GOOGLE_ADS_DEVELOPER_TOKEN=
GOOGLE_ADS_OAUTH_CLIENT_ID=
GOOGLE_ADS_OAUTH_CLIENT_SECRET=
# Optional: override the Google Ads API version (e.g. v21). Leave blank to use the library default.
GOOGLE_ADS_API_VERSION=
# Optional manager account login customer ID (without dashes)
GOOGLE_ADS_LOGIN_CUSTOMER_ID=

# OpenAI API key and prompt configuration
OPENAI_API_KEY=
OPENAI_MODEL=gpt-5-nano
OPENAI_PAGE_SUMMARY_SYSTEM_PROMPT="You analyze a landing page to infer its product/service, audience, and exclusions. Return a concise, factual summary (bulleted), avoid marketing fluff."
OPENAI_RELEVANCY_SYSTEM_PROMPT="You classify paid search queries as relevant vs irrelevant for a given landing page. Be conservative. Do not block brand or near-brand terms. Prefer EXACT negatives for single clear bad queries; PHRASE if many bad variants share a phrase. Output only JSON matching the provided schema."
# Optional: maximum concurrent OpenAI requests (default 60; we will use 85% of this value)
OPENAI_MAX_CONCURRENT_REQUESTS=
# Optional: number of search terms analysed per OpenAI request (default 80)
OPENAI_RELEVANCY_CHUNK_SIZE=
# Note: some OpenAI models (e.g. gpt-5-nano) enforce their default temperature. Overrides are ignored.
# Optional: cap on the number of search terms sent to the LLM per analysis run (default 1500)
OPENAI_MAX_TERMS=
# Optional: drop search terms with impressions below this threshold before LLM analysis (default 0)
OPENAI_MIN_IMPRESSIONS=

# Optional logging configuration
LOG_LEVEL=INFO

# Feature flags
FEATURE_APPLY_NEGATIVES=false
